COOKIE持续登录验证原理
在cookie中在一个字段中保存登录信息, 主要包括用户ID, 用户ID+最后次登录时间+扰乱码生成的MD5信息, 当用户访问网站的时候, 直接读取出相应字段, 然后根据上面的信息做比较, 最后判断是否是过期, 如果没有过期, 则直接返回相应的用户对象.

登录逻辑
1. 直接根据用户名, 加密后的密码从数据库中查询. 
2. 设置将登录信息按上面的逻辑写入cookie中.
3. 在cookie中保存一个用户名.

漏洞
	如果拿到了一个用户的cookie信息, 是不是就可以直接伪造的登录了呢?

权限拦截
	通过拦截器实现, 拦截器将会拦截所有的/customer/*下的连接, 其判断机制与cookie验证原理相同. 

其它
	在拦截或是Spring注入参数时都依赖于cookie, 所以需要request的实例, 所以, 在请求中, 会直接将request, response保存到WebContent对象中类型为ThreadLocal的静态变量WEBCONTEXT_LOCAL中, 这样, 程序任何地方都可以取到request, response信息, 因为threadLocal对象是线程单例的.
